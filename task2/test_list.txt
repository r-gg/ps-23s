{list = c -> f -> x -> cond (c x) { val = x, nxt = list c f (f x) } {}, reduce = f -> x -> lst -> cond lst (f (reduce f x (lst nxt)) (lst val)) x, range = a -> b -> list (x -> minus b x) (x -> plus 1 x) a, sum = lst -> reduce (x -> y -> plus x y) 0 lst} sum (range 3 6)